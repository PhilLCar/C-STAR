{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "C*",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#includes"
		},
		{
			"include": "#commentblocks"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#supports"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.csr",
				"match": "\\b(if|while|for|return|else|do|break|switch|case|default)\\b"
			},
			{
				"name": "keyword.control.preprocessor.csr",
				"match": "^\\s*(#define|#ifdef|#ifndef|#if|#elif|#else|#error|#warning|#pragma|#endif|#undef)\\b"
			},
			{
				"name": "keyword.operator.csr",
				"match": "(\\+|\\-|\\*|&|~|\\||\\^|=)"
			},
			{
				"match": "[^/](/)[^/]",
				"captures": {
					"1": { "name": "keyword.operator.csr" }
				}
			}]
		},
		"constants": {
			"patterns": [{
				"name": "constant.numeric.decint.csr",
				"match": "\\b[0-9]+(u|ui|i|us|s|ub|sb|U|UI|I|US|S|UB|SB)?\\b"
			},
			{
				"name": "constant.numeric.binint.csr",
				"match": "\\b(0b|0B)[0-1]+(u|ui|i|us|s|ub|sb|U|UI|I|US|S|UB|SB)?\\b"
			},
			{
				"name": "constant.numeric.octint.csr",
				"match": "\\b(0o|0O)[0-7]+(u|ui|i|us|s|ub|sb|U|UI|I|US|S|UB|SB)?\\b"
			},
			{
				"name": "constant.numeric.hexint.csr",
				"match": "\\b(0x|0X)[0-9a-fA-F]+(u|ui|i|us|s|ub|sb|U|UI|I|US|S|UB|SB)?\\b"
			},
			{
				"name": "constant.language.csr",
				"match": "\\b(true|false|null)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.csr",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.csr",
					"match": "\\\\."
				}
			]
		},
		"includes": {
			"patterns": [{
				"match": "^\\s*(#include)\\s*((<.*?>)|(\".*?\"))",
				"captures": {
					"1": { "name": "keyword.control.preprocessor.csr" },
					"3": { "name": "string.quoted.double.include.csr" },
					"4": { "name": "string.quoted.double.include.csr" }
				}
			}]
		},
		"commentblocks": {
			"name": "comment.block.csr",
			"begin": "/\\*",
			"end": "\\*/"
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.double-slash.csr",
				"match": "//[^/].*"
			},
			{
				"name": "comment.line.triple.csr",
				"match": "///(.*?:)?.*",
				"captures": {
					"1" : { "name": "storage.type.class.cominstr.csr"}
				}
			}]
		},
		"supports": {
			"patterns": [{
					"name": "support.function.csr",
					"match": "\\b(print|malloc|realloc|free|memcpy|memcmp|strcpy|strcmp)\\b"
				},
				{
					"match": "\\s*#.*?(defined|push|pop)",
					"captures": {
						"1": { "name": "support.function.preprocessorcsr" }
					}
				}
			]
		}
	},
	"scopeName": "source.csr"
}