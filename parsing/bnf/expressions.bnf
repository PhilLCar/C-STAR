<forward: statement>
<forward: type>

// PRIORITY 20 RL
<expression> ::= [ <type> ] <raw: variable> <expression> - <parent> - <unary> - <ref> - <deref> - <cast> | <sequence>

// PRIORITY 19 LR
<sequence> ::= <sequence> "," <pairing> | <pairing>

// PRIORITY 18 RL
<pairing> ::= <assignment> ":" <pairing> | <assignment>

// PRIORITY 17 RL
<assignment> ::= <ternary> ( "="    | 
                             "+="   |
                             "-="   |
                             "*="   |
                             "/="   |
                             "%="   |
                             "+^="  |
                             "-^="  |
                             "*^="  |
                             "/^="  |
                             "<<="  |
                             ">>="  |
                             ">>>=" |
                             "|>="  |
                             "<|="  |
                             "&="   |
                             "^="   |
                             "|="   |
                             "~=") <assignment> | <ternary>

// PRIORITY 15 RL
<ternary> ::= <ternary> "?" <log-or> ":" <log-or> | <log-or>

// PRIORITY 14 LR
<log-or>  ::= <log-or> "||" <log-xor> | <log-xor>

// PRIORITY 13 LR
<log-xor> ::= <log-xor> "^^" <log-and> | <log-and>

// PRIORITY 12 LR
<log-and> ::= <log-and> "&&" <bit-or> | <bit-or>

// PRIORITY 11 LR
<bit-or>  ::= <bit-or> "|" <bit-xor> | <bit-xor>

// PRIORITY 10 LR
<bit-xor> ::= <bit-xor> "^" <bit-and> | <bit-and>

// PRIORITY 9 LR
<bit-and> ::= <bit-and> "&" <comparative> | <comparative>

// PRIORITY 8 LR
<comparative> ::= <comparative> ( "==" | "===" | "!=" | "!==" ) <relational> | <relational>

// PRIORITY 7 LR
<relational> ::= <relational> ( "<" | ">" | "<=" | ">=" ) <shift> | <shift>

// PRIORITY 6 LR
<shift> ::= <shift> ( "<<" | ">>" | ">>>" | "|>" | "<|" ) <additive> | <additive>

// PRIORITY 5 LR
<additive> ::= <additive> ( "+" | "-" ) <multiplicative> | <multiplicative>

// PRIORITY 4 LR
<multiplicative> ::= <multiplicative> ( "*" | "/" | "%" ) <power> | <power>

// PRIORITY 3 LR
<power> ::= <power> ( "*^" | "/^" ) <p2> | <p2>

// PRIORITY 2 RL
<p2> ::= <prefix> | <unary> | <not> | <cast> | <deref> | <ref> | <p1>
<prefix>  ::= ( "++" | "--" | "+^" | "-^" | "<:") <p1>
<unary>   ::= ( "+" | "-" ) <p1>
<not>     ::= ( "!" | "~" ) <p1>
<cast>    ::= "(" <type> ")" <p1>
<deref>   ::= "*" <p1>
<ref>     ::= "&" <p1>

// PRIORITY 1 LR
<p1> ::= <postfix> | <call> | <index> | <access> | <p-access> | <parent> | <list> | <array> | <lambda> | <value>
<postfix>   ::= <expression> ( "++" | "--" | "!*" | "!/" | "!" | ":>")
<call>      ::= <expression> "(" [ <expression> ] ")"
<index>     ::= <expression> "[" <expression> "]"
<access>    ::= <expression> "."  <raw: variable>
<p-access>  ::= <expression> "->" <raw: variable>
<parent>    ::= "(" <expression> ")"
<list>      ::= "[" [ <expression> ] "]"
<array>     ::= "{" [ <expression> ] "}"
<lambda>    ::= "(" [ <parameter> { "," <parameter> } ] ")" "{" { <statement> } "}"
<parameter> ::= [ <type> ] <expression>

// BASE VALUE
<value> ::= <raw: variable> | <raw: string> | <raw: integer> | <raw: decimal> | <raw: constant>